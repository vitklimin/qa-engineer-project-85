---
- summary: |
    Проверка регистрации пользователя
  requirement: |
    Пользователь должен иметь возможность зарегистрироваться на сайте
  prerequisites: |
    "no-data"
  test-data: |
    "no-data"
  steps:
    - Нажимаем на "Sign up"
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим подтверждение Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Успешная регистрация, переход на главную страницу сайта

- summary: |
    Успешная авторизация
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: |
    "no-data"
  test-data: |
    Email = klimin.vitaik@inbox.ru
    Password = Ghjnjnbg1991
  steps:
    - Нажимаем на "Sign in"
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь успешно авторизован

- summary: |
    Проверка авторизации через GitHub
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: |
    Пользователь вошел в свою учетную запись на GitHub
  test-data: |
    "no-data"
  steps:
    - Нажимаем на "Sign in"
    - Нажимаем на "Sign in with Github"
    - Нажимаем кнопку «Sign in»
  expected-result: |
    Пользователь успешно авторизован через Github

- summary: |
    Проверка авторизации через Discord
  requirement: |
    Пользователь должен иметь возможность авторизоваться
  prerequisites: |
    Пользователь вошел в свою учетную запись Discord
  test-data: |
    "no-data"
  steps:
    - Нажимаем на "Sign in"
    - Нажимаем на "Sign in with Discord"
    - Нажимаем кнопку «Вход»
  expected-result: |
    Пользователь успешно авторизован через Discord

- summary: |
   Проверка авторизации незарегистрированного пользователя
  requirement: |
   При вводе незарегистрированных данных, сайт должен выдать ошибку
  prerequisites: |
   "no-data"
  test-data: |
   Ввести любое слово, например Email = vitkl@mail.ru
   Ввести любое слово, например Password = Prototip2019.
  steps:
   - Ввести Email
   - Ввести Password
   - Нажимаем кнопку «Submit»
  expected-result: |
   Появляется сообщение "EMAIL_NOT_FOUND"
    
- summary: |
    Проверка выхода из личного кабинета
  requirement: |
    Пользователь должен иметь возможность выйти из личного кабинета
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на свое имя в верхнем правом углу
    - Из появившегося списка нажимаем "sign out"
  expected-result: |
    Сайт выходит из системы и перенаправляет нас на главную страницу сайта 

- summary: |
    Проверка создания игры без регистрации
  requirement: |
    Пользователь должен иметь возможность принять участие в игре без регистрации
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на кнопку "try simple batlle" на главной странице сайта
  expected-result: |
    Игра без регистрации успешно создана

- summary: |
    Проверка восстановления пароля
  requirement: |
    Пользователь должен иметь возможность восстановить пароль
  prerequisites: |
    "no-data"
  test-data: |  
    Email = klimin.vitaik@inbox.ru
  steps:
    - Нажимаем на "Sign in"
    - Нажимамаем на "Forgot your password?"
    - Вводим в поле "Email" данные klimin.vitaik@inbox.ru
    - Нажимаем на "Submit"
    - Проверяем эллектронную почту на наличие письма
    - Нажимаем на ссылку указаную в письме
    - Пишем новый пароль
    - Нажимаем кнопку "Save"
  expected-result: |
    Новый пароль сохранился в системе

- summary: |
    Проверка просмотра информации о турнирах
  requirement: |
    Пользователь должен иметь возможность просматривать информацию о турнирах
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на "Tournaments"
  expected-result: |
    Отображается список турниров который состоит из: name, type, level, state, starts_at, actions

- summary: |
    Отображение созданной игры с другим пользователем в списке лобби
  requirement: |
    Пользователь может просмотреть созданную игру в списке лобби.
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на "CREATE A GAME"
    - Нажимаем на "Create battle"
  expected-result: |
    Игра отображается в списке лобби

- summary: |
    Проверка победы в игре
  requirement: |
    Пользователь должен иметь возможность выйграть в игре
  prerequisites: |
    Создать игру с ботом rect_area, level -1 звезда, Time control - 10 min, язык - NodeJS 
  test-data: |
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
    return width * length;
    };

    module.exports = solution;
  steps:
    - Ввести код 
    - Нажать "Run"
  expected-result: |
    Пользователь победил в игре

- summary: |
    Проверка просмотра рейтинга пользователей
  requirement: |
    Пользователь должен иметь возможность просматривать рейтинг пользователей
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на любого игрока
  expected-result: |
    Открывается страница игрока с его рейтингом и статистикой
    
- summary: |
    Проверка поиска конкретного пользователя в списке
  requirement: |
    Пользователь должен иметь возможность искать конкретного пользователя в списке
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "User rating"
    - Ввести любое слово, например пользователь Acemore
  expected-result: |
    В списке появляеться пользователь которого искали

- summary: |
    Проверка просмотра списка задач
  requirement: |
    Пользователь должен иметь возможность просматривать задачи
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "Tasks"
  expected-result: |
    Открывается таблица задач

- summary: |
    Успешное изменение своих данных в личном кабинете
  requirement: |
    Пользователь должен иметь возможность изменить свои данные в личном кабинете
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "Settings"
    - В поле "Your name" вводим данные
    - В графе "Your weapon" выбираем Php
    - В графе "Select sound type" выбираем CS
    - Нажимаем на "Save"
  expected-result: |
    Появляется сообщение об успешной изменении данных

- summary: |
    Проверка просмотра исходного кода игры на Githab
  requirement: |
    Пользователь должен иметь возможность просматривать исходный код игры на Githab
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data" 
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "SourceCode"
  expected-result: |
    Отоброжается репозиторий Github

- summary: |
    Проверка перехода из личного кабинета на сайт Hexlet
  requirement: |
    Пользователь должен иметь возможность из личного кабинета перейти на сайт Hexlet
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "Hexlet"
  expected-result: |
    Отоброжается главная страница сайта https://ru.hexlet.io/

- summary: |
    Проверка перехода в сообщество игры в телеграмм канале
  requirement: |
    Пользователь должен иметь возможность перейти в сообщество игры в телеграмм канале
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data" 
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Нажимаем на "Tg#codebattle"
  expected-result: |
    Отоброжается приглашение в сообщество в телеграмм

- summary: |
    Проверка просмотра завершенных игр
  requirement: |
    Пользователь должен иметь возможность просматривать завершенные игры
  prerequisites: |
    "no-data" 
  test-data: |  
    "no-data"  
  steps:
    - Нажимаем на свое имя в правом верхнем углу
    - Выбираем "My Profile"
    - Нажимаем на "Completed games" 
    - Нажимаем на "Show"
  expected-result: |
    Переходим в игру в котором отображается весь процесс прошедшей игры    
    
- summary: |
    Проверка отправки сообщения в чат с главной страницы
  requirement: |
    Пользователь должен иметь возможность вести переписку в чате
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data" 
  steps:
    - В строке чата пишем любой текст и смайлы
    - Нажимаем на "Send"
  expected-result: |
    Текст виден в чате всем пользователям

- summary: |
    Успешной приглашение другого пользователя в игру
  requirement: |
    Пользователь должен иметь возможность пригласить другого пользователя в игру
  prerequisites: |
    Пользователь авторизован под двумя учетными записями
  test-data: |  
    Данные для входа под вторым пользователем
    Email: klimin.vitaik@inbox.ru
    Password: Ghjnjnbg1991
  steps:
    - В строке "Online players" нажимаем на второго своего авторизированного пользователя 
    - Выбираем "Send an invite"
    - Выбираем произвольные настройки игры
    - Нажимаем "Creaty invite"
    - На втором аккаунте проверяем точто появилось приглашение в лобби
    - На втором аккаунте нажимаем на кнопку двух скрещеных мечей
    - Нажимаем на "Accept"
  expected-result: |
    Начинается игра

- summary: |
    Проверка отправки личного сообщения другому пользователю
  requirement: |
    Пользователь должен иметь возможность отправить личное сообщение другому пользователю
  prerequisites: |
    Пользователь авторизован под двумя пользователями
  test-data: |  
    Данные для входа под вторым пользователем
    Email: klimin.vitaik@inbox.ru
    Password: Ghjnjnbg1991
  steps:
    - В строке "Online players" нажимаем на второго своего авторизированного пользователя 
    - Выбираем "Direct massage"
    - Пишем любой текст в строку для чата
    - На втором аккаунте проверяем что сообщение получено
  expected-result: |
    В чате отображается сообщение

- summary: |
    Проверка принятия участия в созданной игре
  requirement: |
    Пользователь имеет возможность принять участие в созданной игре
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data" 
  steps:
    - В лобби выбираем случайную игру
    - Нажимаем "Fight"
  expected-result: |
    Начинается игра

- summary: |
    Успешная смена языка программирования во время игры
  requirement: |
    Пользователь должен иметь возможность выбрать во время игры язык программирования
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - В выподающем списке выбираем любой другой язык програмирования
  expected-result: |
    Язык меняется на экране написания кода
    
- summary: |
    Успешный просмотр задач во время игры на английском и русском языках
  requirement: |
    Пользователь должен иметь возможность во время игры просматривать задачу на английском и русском языках
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - В выподающем списке задачи выбираем "RU" или "EN"
  expected-result: |
    Описание задачи отображается на выбранном языке

- summary: |
    Успешная проверка решения во время игры
  requirement: |
    Пользователь должен иметь возможность во время игры проверить решение
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - Над редактором нажимаем на кнопку "Run"
  expected-result: |
    В графе появится результат проверки

- summary: |
    Проверка просмотра во время игры своего редактора и редактора соперника
  requirement: |
    Пользователь должен иметь возможность во время игры просматривать свой редактор и редактор соперника
  prerequisites: |
    "no-data"
  test-data: |  
    "no-data" 
  steps:
    - Игра запущена
  expected-result: |
    На экране отображается свой редактор и редактор соперника

- summary: |
    Проверка просмотра повтора игры
  requirement: |
    Пользователь должен иметь возможность просмотреть повтор игры
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - Нажимаем на "Open history"
    - Нажимаем на кнопку воспроизведения
  expected-result: |
    Просматривается запись игры

- summary: |
    Проверка сброса редактора во время игры 
  requirement: |
    Пользователь должен иметь возможность во время игры сбросить редактор
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data"
  steps:
    - Нажимаем на кнопку над редатором "Reset solution"
  expected-result: |
    Поле редактора очищается и возвращается в исходное положение

- summary: |
    Проверка возможности предложения реванша сопернику
  requirement: |
    Пользователь должен иметь возможность предложить реванш сопернику
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - Нажимаем на кнопку "Rematch" в поле соперника
  expected-result: |
    Матч начинается заного

- summary: |
    Проверка возможности сдаться во время игры
  requirement: |
    Пользователь должен иметь возможность сдаться во время игры
  prerequisites: |
    Открыта игра
  test-data: |  
    "no-data" 
  steps:
    - Нажимаем на кнопку над редактором "Give Up"
    - Подтверждаем то что мы действительно хотим сдаться нажимая на кнопку " Give up"
  expected-result: |
    Появляется сообщение о том что матч проигран

- summary: |
    Проверка выхода из игры в личный кабинет
  requirement: |
    Пользователь должен иметь возможность из игры вернуться в личный кабинет
  prerequisites: |
    Открыта игра
  test-data: |  
    Тестовые данные отсутвуют 
  steps:
    - Нажимаем на кнопку "Back to home"
  expected-result: |
    Открывается страница личного кабинета

- summary: |
    Проверка кроссбраузерности Edge
  requirement: |
    Сайт нужно протестировать на совместимость с последними версиями браузеров
  prerequisites: |
    "no-data"
  test-data: |
    "no-data"
  steps:
    - Открываем сайт в Edge
    - Проверяем внешний вид страницы
  expected-result: |
    Страница сайта выглядит корректно, текст и изображения не выходят за блоки

- summary: |
    Проверка кроссбраузерности Firefox
  requirement: |
    Сайт нужно протестировать на совместимость с последними версиями браузеров
  prerequisites: |
    "no-data"
  test-data: |
    "no-data"
  steps:
    - Открываем сайт в Firefox
    - Проверяем внешний вид страницы
  expected-result: |
    Страница сайта выглядит корректно, текст и изображения не выходят за блоки

- summary: |
    Проверка кроссбраузерности Google Chrome
  requirement: |
    Сайт нужно протестировать на совместимость с последними версиями браузеров
  prerequisites: |
    "no-data"
  test-data: |
    "no-data"
  steps:
    - Открываем сайт в Google Chrome
    - Проверяем внешний вид страницы
  expected-result: |
    Страница сайта выглядит корректно, текст и изображения не выходят за блоки

- summary: |
    Проверка на удобство использования на мобильном устройстве 
  requirement: |
    Сайт должен быть удобным на мобильном устройстве
  prerequisites: |
    "no-data"
  test-data: |  
    Устройство = Iphone XR 
  steps:
    - Переходим в DevTools
    - Нажимаем на "режим адаптивного дизайна"
    - Выбираем устройство
  expected-result: |
    Сайт отображается адаптивно